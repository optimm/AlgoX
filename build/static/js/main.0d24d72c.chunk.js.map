{"version":3,"sources":["Header.js","App.js","index.js"],"names":["Header","className","App","useState","arr","setArr","order","setOrder","color","setColor","resetColor","i","length","onClick","arrTemp","orderTemp","colorTemp","push","Math","floor","random","j","clr","sort","setInterval","clearInterval","swapped","console","log","flag","mini","map","item","index","style","backgroundColor","height","transition","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d24d72c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Sorting Visualizer</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { ColorLensOutlined } from \"@material-ui/icons\";\n\nfunction App() {\n  const [speed, setSpeed] = useState(600);\n  let [arr, setArr] = useState([\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"30\",\n    \"37\",\n    \"38\",\n  ]);\n  let [order, setOrder] = useState({});\n  let [color, setColor] = useState([]);\n\n  function clickHandler() {\n    let arrTemp = [],\n      orderTemp = {},\n      colorTemp = [];\n    for (let i = 0; i < 10; i++) {\n      arrTemp.push(Math.floor(Math.random() * 30 + 10));\n      orderTemp[arrTemp[i]] = i;\n      colorTemp[i] = \"green\";\n    }\n\n    setArr([...arrTemp]);\n    setOrder(orderTemp);\n    setColor(colorTemp);\n  }\n\n  function resetColor() {\n    for (let i = 0; i < arr.length; i++) {\n      color[i] = \"green\";\n    }\n  }\n\n  const bubble = () => {\n    let i = 0,\n      j = 0;\n    let swapped = 0;\n    const sort = setInterval(() => {\n      console.log(arr);\n\n      resetColor();\n      color[j] = \"gold\";\n      let flag = true;\n\n      if (arr[j] > arr[j + 1]) {\n        color[j] = \"red\";\n        color[j + 1] = \"red\";\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n        swapped++;\n      } else if (i > arr.length - 1) {\n        clearInterval(sort);\n        resetColor();\n      } else if (j >= arr.length - i - 1) {\n        flag = false;\n        j = 0;\n        i++;\n        resetColor();\n      }\n      if (!flag && swapped == 0) {\n        clearInterval(sort);\n        resetColor();\n      }\n      if (!flag) {\n        swapped = 0;\n      }\n      if (flag) {\n        j++;\n      }\n\n      setArr([...arr]);\n      // setOrder({ ...order });\n    }, 1000);\n  };\n\n  const call = () => {\n    let i = 0,\n      j = 0;\n    let clr = [];\n    clr = color;\n    const sort = setInterval(() => {\n      resetColor();\n\n      if (j >= 0 && arr[j] > arr[j + 1]) {\n        clr[j] = \"red\";\n        order[arr[j]] = j + 2;\n        order[arr[j + 1]] = j + 1;\n\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n\n        j--;\n      } else if (i >= arr.length - 1) {\n        clearInterval(sort);\n        resetColor();\n      } else {\n        i++;\n        resetColor();\n\n        j = i - 1;\n        clr[i] = \"red\";\n      }\n      setArr([...arr]);\n      // setOrder({ ...order });\n    }, 1000);\n  };\n\n  const selection = () => {\n    let i = 0,\n      j = 1,\n      mini = 0;\n\n    const sort = setInterval(() => {\n      color[mini] = \"purple\";\n      color[j] = \"gold\";\n      if (arr[j] < arr[mini]) {\n        mini = j;\n        j++;\n      } else if (i >= arr.length - 1) {\n        clearInterval(sort);\n        resetColor();\n      } else if (j === arr.length) {\n        color[mini] = \"red\";\n        color[i] = \"red\";\n        [arr[mini], arr[i]] = [arr[i], arr[mini]];\n        i++;\n        j = i + 1;\n        mini = i;\n        setArr([...arr]);\n      } else if (arr[j] >= arr[mini]) {\n        j++;\n      }\n\n      setArr([...arr]);\n      resetColor();\n    }, 400);\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"handler\">\n        <button onClick={clickHandler} className=\"sort random\">\n          Randomize\n        </button>\n        <button onClick={call} className=\"sort\">\n          Insertion\n        </button>\n        <button onClick={bubble} className=\"sort\">\n          Bubble sort\n        </button>\n        <button onClick={selection} className=\"sort\">\n          Selection\n        </button>\n      </div>\n      <div className=\"container\">\n        {arr.map((item, index) => {\n          return (\n            <div\n              className=\"bar\"\n              style={{\n                backgroundColor: color[index],\n                height: item * 10,\n\n                // margin: \"10px\",\n                transition: \"all 0.8s ease\",\n              }}\n            >\n              {\" \"}\n              {item}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}